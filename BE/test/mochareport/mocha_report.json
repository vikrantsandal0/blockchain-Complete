{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-09-16T12:26:50.053Z",
    "end": "2021-09-16T12:26:50.092Z",
    "duration": 39,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8dca8712-9c43-4c5a-85b6-6baf90be635d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96d7b9c4-9ffb-48aa-9f1f-93abd4b8d94b",
          "title": "GET /api/v1/getBlocks",
          "fullFile": "/Users/vikrantsandal/Documents/blockchain complete/BE/test/scripts/controllers/blockChain.spec.js",
          "file": "/test/scripts/controllers/blockChain.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "GET /api/v1/getBlocks \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[5]++;cov_1rgpbshfug.s[39]++;app.close();cov_1rgpbshfug.s[40]++;done();",
              "err": {},
              "uuid": "7be15119-106f-4f36-8df3-a38885766cd7",
              "parentUUID": "96d7b9c4-9ffb-48aa-9f1f-93abd4b8d94b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "GET /api/v1/getBlocks \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[6]++;cov_1rgpbshfug.s[42]++;_sinon.default.restore();cov_1rgpbshfug.s[43]++;done();",
              "err": {},
              "uuid": "8f976f1f-1279-47a1-a49f-31dc115e5e21",
              "parentUUID": "96d7b9c4-9ffb-48aa-9f1f-93abd4b8d94b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "get blocks - happy flow -  value present in redis",
              "fullTitle": "GET /api/v1/getBlocks get blocks - happy flow -  value present in redis",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[7]++;cov_1rgpbshfug.s[45]++;_sinon.default.stub(redisHelper,\"getKey\").resolves(_constants.default.mockValueGetBlocks.getBlockDatapresentInRedis);cov_1rgpbshfug.s[46]++;_chai.default.request(app).get(`/api/v1/getBlocks`).end((err,res)=>{cov_1rgpbshfug.f[8]++;cov_1rgpbshfug.s[47]++;res.should.have.status(200);cov_1rgpbshfug.s[48]++;res.body.should.be.a(\"object\");cov_1rgpbshfug.s[49]++;res.body.message.should.be.eql(\"SUCCESS\");cov_1rgpbshfug.s[50]++;done();});",
              "err": {},
              "uuid": "765916c0-d013-4051-8f24-15f0ea9492fb",
              "parentUUID": "96d7b9c4-9ffb-48aa-9f1f-93abd4b8d94b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get blocks - happy flow -  value not present in redis",
              "fullTitle": "GET /api/v1/getBlocks get blocks - happy flow -  value not present in redis",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[9]++;cov_1rgpbshfug.s[52]++;_sinon.default.stub(redisHelper,\"getKey\").resolves(_constants.default.mockValueGetBlocks.absentInRedis);cov_1rgpbshfug.s[53]++;_sinon.default.stub(_axios.default,'create').returns((()=>{cov_1rgpbshfug.f[10]++;cov_1rgpbshfug.s[54]++;return url=>{cov_1rgpbshfug.f[11]++;cov_1rgpbshfug.s[55]++;return Promise.resolve({data:_constants.default.mockValueGetBlocks.getBlocksDataInsertInRedis});};})());cov_1rgpbshfug.s[56]++;_sinon.default.stub(redisHelper,\"setKey\").resolves([]);cov_1rgpbshfug.s[57]++;_chai.default.request(app).get(`/api/v1/getBlocks`).end((_,res)=>{cov_1rgpbshfug.f[12]++;cov_1rgpbshfug.s[58]++;res.should.have.status(200);cov_1rgpbshfug.s[59]++;res.body.should.be.a(\"object\");cov_1rgpbshfug.s[60]++;res.body.message.should.be.eql(\"SUCCESS\");cov_1rgpbshfug.s[61]++;res.body.result.itemsCount.should.be.eql(_constants.default.mockValueGetBlocks.getBlocksDataInsertInRedis.length);cov_1rgpbshfug.s[62]++;done();});",
              "err": {},
              "uuid": "2c36cf46-6963-48b5-a138-0a002741c142",
              "parentUUID": "96d7b9c4-9ffb-48aa-9f1f-93abd4b8d94b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get blocks - incorrect page number - error expected",
              "fullTitle": "GET /api/v1/getBlocks get blocks - incorrect page number - error expected",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[13]++;cov_1rgpbshfug.s[64]++;_chai.default.request(app).get(`/api/v1/getBlocks?page=abc`).end((err,res)=>{cov_1rgpbshfug.f[14]++;cov_1rgpbshfug.s[65]++;res.should.have.status(503);cov_1rgpbshfug.s[66]++;res.body.should.be.a(\"object\");cov_1rgpbshfug.s[67]++;res.body.message.should.be.eql('\"page\" must be a number');cov_1rgpbshfug.s[68]++;done();});",
              "err": {},
              "uuid": "4c444b88-e443-4019-810e-53fab523a4ef",
              "parentUUID": "96d7b9c4-9ffb-48aa-9f1f-93abd4b8d94b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "765916c0-d013-4051-8f24-15f0ea9492fb",
            "2c36cf46-6963-48b5-a138-0a002741c142",
            "4c444b88-e443-4019-810e-53fab523a4ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c90cd6fb-3cea-451e-b9bf-1342511b0671",
          "title": "GET /api/v1/getRawBlock/:block_hash_id",
          "fullFile": "/Users/vikrantsandal/Documents/blockchain complete/BE/test/scripts/controllers/blockChain.spec.js",
          "file": "/test/scripts/controllers/blockChain.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "GET /api/v1/getRawBlock/:block_hash_id \"after all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[16]++;cov_1rgpbshfug.s[71]++;app.close();cov_1rgpbshfug.s[72]++;done();",
              "err": {},
              "uuid": "6a04f1dc-b717-4bcf-9f40-7d701e1c7014",
              "parentUUID": "c90cd6fb-3cea-451e-b9bf-1342511b0671",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "GET /api/v1/getRawBlock/:block_hash_id \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[17]++;cov_1rgpbshfug.s[74]++;_sinon.default.restore();cov_1rgpbshfug.s[75]++;done();",
              "err": {},
              "uuid": "657f233c-0636-49f0-b7a1-424778f786b8",
              "parentUUID": "c90cd6fb-3cea-451e-b9bf-1342511b0671",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "get Raw block - happy flow -  value present in redis",
              "fullTitle": "GET /api/v1/getRawBlock/:block_hash_id get Raw block - happy flow -  value present in redis",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[18]++;cov_1rgpbshfug.s[77]++;_sinon.default.stub(redisHelper,\"getKey\").resolves(_constants.default.mockValueGetBlocks.getRawBlockDataPresentInRedis);cov_1rgpbshfug.s[78]++;_chai.default.request(app).get(`/api/v1/getRawBlock/${_constants.default.mockUUID}`).end((_,res)=>{cov_1rgpbshfug.f[19]++;cov_1rgpbshfug.s[79]++;res.should.have.status(200);cov_1rgpbshfug.s[80]++;res.body.should.be.a(\"object\");cov_1rgpbshfug.s[81]++;res.body.message.should.be.eql(\"SUCCESS\");cov_1rgpbshfug.s[82]++;done();});",
              "err": {},
              "uuid": "b2afbc24-35ee-4525-9b8b-1dc9a2103c2e",
              "parentUUID": "c90cd6fb-3cea-451e-b9bf-1342511b0671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get Raw block - happy flow -  value not present in redis",
              "fullTitle": "GET /api/v1/getRawBlock/:block_hash_id get Raw block - happy flow -  value not present in redis",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1rgpbshfug.f[20]++;cov_1rgpbshfug.s[84]++;_sinon.default.stub(redisHelper,\"getKey\").resolves(_constants.default.mockValueGetBlocks.absentInRedis);cov_1rgpbshfug.s[85]++;_sinon.default.stub(_axios.default,'create').returns((()=>{cov_1rgpbshfug.f[21]++;cov_1rgpbshfug.s[86]++;return url=>{cov_1rgpbshfug.f[22]++;cov_1rgpbshfug.s[87]++;return Promise.resolve({data:_constants.default.mockValueGetBlocks.getRawBlockDataInsertInRedis});};})());cov_1rgpbshfug.s[88]++;_sinon.default.stub(redisHelper,\"setKey\").resolves([]);cov_1rgpbshfug.s[89]++;_chai.default.request(app).get(`/api/v1/getRawBlock/${_constants.default.mockUUID}?page=1`).end((_,res)=>{cov_1rgpbshfug.f[23]++;cov_1rgpbshfug.s[90]++;res.should.have.status(200);cov_1rgpbshfug.s[91]++;res.body.should.be.a(\"object\");cov_1rgpbshfug.s[92]++;res.body.message.should.be.eql(\"SUCCESS\");cov_1rgpbshfug.s[93]++;res.body.result.itemsCount.should.be.eql(_constants.default.mockValueGetBlocks.getRawBlockDataInsertInRedis.tx.length);cov_1rgpbshfug.s[94]++;done();});",
              "err": {},
              "uuid": "d60b4831-5c66-43f3-9f39-c15a229e9aa5",
              "parentUUID": "c90cd6fb-3cea-451e-b9bf-1342511b0671",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2afbc24-35ee-4525-9b8b-1dc9a2103c2e",
            "d60b4831-5c66-43f3-9f39-c15a229e9aa5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mocha_report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "test/mochareport",
        "reportFilename": "mocha_report"
      },
      "version": "4.1.0"
    }
  }
}